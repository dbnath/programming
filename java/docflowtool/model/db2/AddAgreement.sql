USE TEST;

DELIMITER $$ 
DROP PROCEDURE IF EXISTS TEST.AddAgreement $$
CREATE PROCEDURE TEST.AddAgreement (
	IN IN_ID_AGRMT varchar(20),
	IN ID_AGREEMENT_TYPE int,
	IN LOB varchar(10),
	IN ID_WF_STATUS int,
	IN IN_ASSIGNED_TO varchar(10),
	IN CREATED_BY varchar(10),
	IN CREATED_DT datetime,
	IN LAST_UPDATED_BY varchar(10),
	IN LAST_UPDATE_DT datetime )
-- grant execute on TEST.* to ''@'localhost'; Run as root after proc creation mysql -u root -p
BEGIN

	/*DECLARE exit handler for sqlexception
	  BEGIN
		
	   ROLLBACK;
	  
	END;*/

	START TRANSACTION;
	
	SELECT @ID_AGRMT := ID_AGRMT FROM WF_PROCESS where ID_AGRMT = IN_ID_AGRMT;
	SELECT @ID_ROLE := ID_ROLE FROM USER_ROLE_MAP where ID_USER = IN_ASSIGNED_TO;
	
		
	IF(@ID_AGRMT IS NULL) THEN
		INSERT INTO WF_PROCESS (ID_AGRMT,ID_ROLE,ID_AGREEMENT_TYPE,LOB,ID_WF_STATUS,CREATED_BY,CREATED_DT,ASSIGNED_TO,LAST_UPDATED_BY,LAST_UPDATE_DT)
		VALUES (IN_ID_AGRMT,@ID_ROLE,ID_AGREEMENT_TYPE,LOB,ID_WF_STATUS,CREATED_BY,CREATED_DT,IN_ASSIGNED_TO,LAST_UPDATED_BY,LAST_UPDATE_DT);
		
		INSERT INTO WF_PROCESS_AUDIT (ID_AGRMT,ID_VER,ID_ROLE,ID_AGREEMENT_TYPE,LOB,ID_WF_STATUS,CREATED_BY,CREATED_DT,ASSIGNED_TO,LAST_UPDATED_BY,LAST_UPDATE_DT)
		VALUES (IN_ID_AGRMT,1,@ID_ROLE,ID_AGREEMENT_TYPE,LOB,ID_WF_STATUS,CREATED_BY,CREATED_DT,IN_ASSIGNED_TO,LAST_UPDATED_BY,LAST_UPDATE_DT);

	ELSE 
		
		SELECT @ID_VER := MAX(ID_VER) FROM WF_PROCESS_AUDIT WHERE ID_AGRMT = IN_ID_AGRMT;

		UPDATE WF_PROCESS set ID_AGREEMENT_TYPE = ID_AGREEMENT_TYPE,LOB = LOB,ID_WF_STATUS = ID_WF_STATUS,CREATED_BY = CREATED_BY,CREATED_DT = CREATED_DT,
		ASSIGNED_TO = IN_ASSIGNED_TO,LAST_UPDATED_BY = LAST_UPDATED_BY,LAST_UPDATE_DT = LAST_UPDATE_DT, ID_ROLE=@ID_ROLE
		WHERE ID_AGRMT = IN_ID_AGRMT;

		INSERT INTO WF_PROCESS_AUDIT (ID_AGRMT,ID_VER,ID_ROLE,ID_AGREEMENT_TYPE,LOB,ID_WF_STATUS,CREATED_BY,CREATED_DT,ASSIGNED_TO,LAST_UPDATED_BY,LAST_UPDATE_DT)
		VALUES (IN_ID_AGRMT,@ID_VER+1,@ID_ROLE,ID_AGREEMENT_TYPE,LOB,ID_WF_STATUS,CREATED_BY,CREATED_DT,IN_ASSIGNED_TO,LAST_UPDATED_BY,LAST_UPDATE_DT);
		
	END IF;
	
	COMMIT;
	
END $$
DELIMITER ;
